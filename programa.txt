M√©todos matem√°ticos y computacionales en cosmolog√≠a, astrof√≠sica y f√≠sica de part√≠culas. 
M√≥dulo de programaci√≥n en Python.
Presentaci√≥n del m√≥dulo
Lugar: Aula AI1, de 12 a 14


 Oct 19 20 : instalaci√≥n e inicio del primer bloque
 Oct 26 27: segundo bloque
 Nov 9 10: resto del primer bloque
 Nov 16 17: tercer bloque
 Nov 23 y 24: cuarto bloque


Total 10 clases de 2 horas = 20 horas. 


Entorno de trabajo del curso
Linux preferentemente (alternativamente OSX o Windows)
Python integrado via Anaconda3 Versi√≥n 2021 actualizada (Jupiter_Lab>3.1)


Evaluaci√≥n


La calificaci√≥n del alumno se obtendr√° en base a la actividad durante el curso y a una prueba final de conocimientos adquiridos, del siguiente modo:
* Valoraci√≥n de informes y trabajos escritos: proceso de aprendizaje en clase: compuesta de actividad diaria + mini trabajo a entregar el 9 de Nov "por escrito". (40% de la nota)
* Valoraci√≥n de an√°lisis de casos, resoluci√≥n de problemas y evaluaci√≥n del trabajo computacional por medio de la realizaci√≥n de un trabajo a presentar oralmente tras la finalizaci√≥n del m√≥dulo. (60% de la nota) 


 


________________


Programa


Las partes pr√°cticas del m√≥dulo pivotan sobre dos ejercicios de Runge Kutta y de Montecarlo, es decir, el problema de n cuerpos y  ùù∫ùùì‚Å¥. Estas pr√°cticas centran el segundo y tercer bloque. En el desarrollo, por motivos did√°cticos y de calendario, el segundo bloque se intercalar√° con el primero.


* Primer bloque: lenguaje (Python > 3.6) 
   * Introducci√≥n al entorno
      * instalaci√≥n (anaconda, jupyter, numba, clang)
      * ejecuci√≥n desde notebook en el navegador 
      * ejecuci√≥n desde consola
   * Introducci√≥n al lenguaje
      * Notaci√≥n b√°sica. Formatos de output.
      * Datos. Tipos de datos. 
         * integer, float, precisi√≥n arbitraria, complejos
         * strings y bytes
      * Sintaxis: funciones, procedimientos, bloques, operadores
         * lambdas
         * inline if
      * agrupaciones: diccionarios, listas, conjuntos
      * iteradores y operaciones sobre iteradores: (zip, [], itertools‚Ä¶)
         * generadores
      * clases y objetos
      * creaci√≥n e importaci√≥n de librer√≠as (m√≥dulos)
      * lectura y escritura de ficheros
         * ficheros CSV con pandas
   * Entorno avanzado
      * ejecuci√≥n desde l√≠nea de comandos
      * par√°metros desde l√≠nea de comandos. Funci√≥n Raw_input
      * matplotlib en jupyter y en salida a ficheros (png, jpg &c)
      * lenguaje avanzado
* Segundo bloque: librer√≠as num√©ricas e Integradores num√©ricos
   * scipy/numpy
      * arrays num√©ricos, sub√≠ndices, selectores
      * manipulaciones principales de numpy. Vectorizaci√≥n y broadcasting
      * sub librerias (modulos) de scipy
   * integradores num√©ricos y ODEs
      * Integradores en scipy.integrate
      * Integradores ad-hoc con introducci√≥n te√≥rica
      * Runge-Kutta en scipy.integrate
      * C√°lculo de un sistema planetario ("problema de n cuerpos")
* Tercer bloque: programaci√≥n cient√≠fica avanzada y Monte Carlo
   * C√≥digo mixto python-C para optimizar procesos
   * generadores aleatorios y utilidades estad√≠sticas
   *  ùù∫ùùì‚Å¥, adaptaci√≥n directa de C, y variantes con numpy etc
* Cuarto bloque: Tratamiento y an√°lisis de datos.
   * Visualizaci√≥n en tiempo real, widgets de control
   * pandas. Manejo de DataFrames.
   * an√°lisis estad√≠stico, histogramas, c√°lculo de errores, etc




Bibliograf√≠a y materiales
* Robert Johansson, Numerical Python, Second Edition
* Fabio Nelli, Python Data Analytics, Second Edition
* Al Sweigart, Automate the Boring Stuff with Python, Second Edition
* HP Langtangen, A Primer on Scientific Programming with Python, Third Edition 
* M Gorelik and I Ozsvald, High Performance Python, Second Edition        


(En general, conviene verificar que los libros que se consulten est√©n usando python 3, y preferiblemente mayor o igual que 3.6. A esto se deben la mayor parte de las referencias a segundas ediciones)


* Numpy https://numpy.org/doc/1.21/
* Numba https://numba.readthedocs.io/en/stable/index.html
* Scipy https://docs.scipy.org/doc/scipy/reference/
* Matplotlib https://matplotlib.org/stable/contents.html
* Jupyter-lab https://jupyterlab.readthedocs.io/en/stable/
        
Github de la asignatura
        https://github.com/arivero/CursoPythonFis/